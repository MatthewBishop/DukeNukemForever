cmake_minimum_required(VERSION 3.22)

project(Duke4)


# Output binaries to above directory.
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set(CMAKE_VERBOSE_MAKEFILE ON)

IF( WIN32 )
    SET ( CMAKE_SHARED_LINKER_FLAGS /MANIFEST:NO )
ENDIF( WIN32 )

# Allow addressing more memory on a 64-bit host.
add_link_options("/LARGEADDRESSAWARE")

# Project is not compatible with data execution prevention.
add_link_options("/NXCOMPAT:NO")

# Project is not compatible with safe exception handlers. 
add_link_options("/SAFESEH:NO")

include_directories(external/bink;external/detour/include;external/glew;external/recast/include)
link_directories(external/bink;)

file(GLOB idLibFiles
     "idlib/*.cpp*"
     "idlib/bv/*.cpp*"
     "idlib/containers/*.cpp*"
     "idlib/geometry/*.cpp*"
     "idlib/hashing/*.cpp*"
     "idlib/math/*.cpp*"  
)

file(GLOB dnGameFiles
     "dukegame/*.cpp*"
     "dukegame/Civilians/*.cpp*"
     "dukegame/ClientGame/*.cpp*"
     "dukegame/DnAI/*.cpp*"     
     "dukegame/Monsters/*.cpp*"
     "dukegame/components/*.cpp*"
     "dukegame/GameSys/*.cpp*"
     "dukegame/Player/*.cpp*"
     "dukegame/Weapons/*.cpp*"
     "dukegame/Renderer/*.cpp*"
     "dukegame/items/*.cpp*"
     "dukegame/Editor/*.cpp*"
)

file(GLOB gameBaseFiles
     "game/*.cpp*"
     "game/anim/*.cpp*"
     "game/gamesys/*.cpp*"
     "game/player/*.cpp"
     "game/physics/*.cpp"
     "game/script/*.cpp"
     "gamedecls/*.cpp*"
) 

file(GLOB typeInfoGenFiles
    "engine/typeinfo/*.cpp*"
)

file(GLOB gameTypeInfoFiles
    "gametypeinfo/*.cpp*"
)

set (toolSupportSrc 
    engine/framework/CmdSystem.cpp
    engine/framework/CVarSystem.cpp
    engine/framework/File.cpp
    engine/framework/FileSystem.cpp
    engine/framework/Unzip.cpp
)
 
# idLib project
add_definitions(-D_AFXDLL -D_WINDOWS -D_CRT_SECURE_NO_DEPRECATE)
add_library(idLib STATIC ${idLibFiles})
target_precompile_headers(idLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
target_compile_definitions(idLib PRIVATE NAME=$<TARGET_FILE_NAME:idLib>)
set_target_properties(idLib PROPERTIES LINK_FLAGS "/PDB:\"idlib.pdb\"")

add_library(gameTypeInfo STATIC ${gameTypeInfoFiles})
target_compile_definitions(gameTypeInfo PRIVATE GAME_DLL=1 -D_D3XP -DCTF)
set_target_properties(gameTypeInfo PROPERTIES LINK_FLAGS "/PDB:\"gameTypeInfo.pdb\"")


# Type InfoGen Project
add_executable(typeinfogen ${typeInfoGenFiles} ${toolSupportSrc})
target_compile_definitions(typeinfogen PUBLIC -DID_TYPEINFO -D__DOOM_DLL__)
target_link_libraries(typeinfogen idLib)
target_precompile_headers(typeinfogen PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)

# Game Project 
add_library(game SHARED  ${dnGameFiles} ${gameBaseFiles} game/Game.def )
target_compile_definitions(game PRIVATE GAME_DLL=1 -D_D3XP -DCTF)
target_link_libraries(game idLib gameTypeInfo)
target_precompile_headers(game PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
set_target_properties(game PROPERTIES OUTPUT_NAME "gamex86" LINK_FLAGS "/PDB:\"gamex86.pdb\"")

add_custom_target(
    GameCustomTarget
    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/../typeinfogen.exe
    OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/__header.h
)
 
add_dependencies(gameTypeInfo GameCustomTarget)

# Engine Project
file(GLOB engineSourceFiles 
    "engine/cm/*.cpp*"
    "engine/external/detour/Source/*.cpp*"
    "engine/external/recast/Source/*.cpp*"
    "engine/decls/*.cpp*"
    "engine/framework/*.cpp*"
    "engine/framework/async/*.cpp*"
    "engine/models/*.cpp*"
    "engine/models/skeletal/*.cpp*"
    "engine/models/static/*.cpp*"
    "engine/navigation/*.cpp*"
    "engine/openal/*.cpp*"
    "engine/renderer/*.cpp*"
    "engine/renderer/imagetools/*.cpp*"
    "engine/renderer/imagetools/color/*.cpp*"
    "engine/renderer/jobs/transcode/image/*.cpp*"
    "engine/renderer/jobs/render/*.cpp*"
    "engine/threads/*.cpp*"
    "engine/sound/*.cpp*"
    "engine/sys/*.cpp*"
    "engine/sys/win32/*.cpp*" 
    "engine/ui/*.cpp*"
)
  
file(GLOB toolSourceFiles
    "engine/tools/*.cpp*"
    "engine/tools/af/*.cpp*"
    "engine/tools/comafx/*.cpp*"
    "engine/tools/radiant/*.cpp*"
    "engine/tools/common/*.cpp*"
    "engine/tools/guis/*.cpp*"
    "engine/tools/common/PropTree/*.cpp*"
    "engine/tools/compilers/dmap/*.cpp*"
    "engine/tools/compilers/navmesh/*.cpp*"
    "engine/tools/guied/*.cpp*"
    "engine/tools/importpipeline/*.cpp*"
    "engine/tools/materialeditor/*.cpp*"
    "engine/tools/particle/*.cpp*"
    "engine/tools/pda/*.cpp*"
    "engine/tools/script/*.cpp*"
    "engine/tools/sound/*.cpp*"
) 

file(GLOB engineDependFiles
    "engine/external/glew/*.c*"
    "engine/external/mikktspace/*.c*"
    "engine/sound/vorbissrc/*.c*"
    "engine/sound/vorbis/*.c*"
    "engine/sound/OggVorbis/oggsrc/*.c*"
    "engine/sound/OggVorbis/vorbissrc/*.c*"
) 
  
set(src_imgui
    "./engine/external/imgui/imconfig.h"
	"./engine/external/imgui/imgui.cpp"
	"./engine/external/imgui/imgui.h"
	"./engine/external/imgui/imgui_draw.cpp"
	"./engine/external/imgui/imgui_internal.h"
	"./engine/external/imgui/imgui_widgets.cpp"
	"./engine/external/imgui/imstb_rectpack.h"
	"./engine/external/imgui/imstb_textedit.h"
	"./engine/external/imgui/imstb_truetype.h"
	"./engine/external/imgui/examples/imgui_impl_opengl3.cpp"
	"./engine/external/imgui/examples/imgui_impl_opengl3.h"
	"./engine/external/imgui/examples/imgui_impl_win32.cpp"
	"./engine/external/imgui/examples/imgui_impl_win32.h"
) 

add_library(engineExternal STATIC ${engineDependFiles} ${src_imgui})
set_target_properties(engineExternal PROPERTIES LINK_FLAGS "/PDB:\"engineExternal.pdb\"")
 
# Engine Project
add_executable(DukeNukemForever ${engineSourceFiles} ${toolSourceFiles} ./engine/sys/win32/rc/doom.rc)
target_compile_definitions(DukeNukemForever PUBLIC -D__DOOM_DLL__)
add_dependencies(DukeNukemForever game)
target_link_directories(DukeNukemForever PUBLIC engine/external/bink/)
target_link_libraries(DukeNukemForever idLib engineExternal delayimp.lib opengl32.lib binkw32.lib dinput8.lib dxguid.lib winmm.lib wsock32.lib dsound.lib glu32.lib dbghelp.lib iphlpapi.lib)
target_precompile_headers(DukeNukemForever PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/idlib/precompiled.h)
set_target_properties(DukeNukemForever PROPERTIES OUTPUT_NAME "DukeNukemForever" LINK_FLAGS "/DelayLoad:ComCtl32.dll /STACK:16777216,16777216 /SUBSYSTEM:WINDOWS /PDB:\"DukeNukemForever.pdb\"")

 